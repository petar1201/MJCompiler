// generated with ast extension for cup
// version 0.8
// 21/0/2024 23:40:4


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(MultipleDesignators MultipleDesignators);
    public void visit(ClassOrVarOrConstDeclaration ClassOrVarOrConstDeclaration);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(MultipleMethodDeclaration MultipleMethodDeclaration);
    public void visit(Addop Addop);
    public void visit(DesignatorIdentExprList DesignatorIdentExprList);
    public void visit(MultipleConstVariablesInOneLineDeclarations MultipleConstVariablesInOneLineDeclarations);
    public void visit(MultipleDesignatorStatements MultipleDesignatorStatements);
    public void visit(MultipleStaticInitializers MultipleStaticInitializers);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(NumOrCharOrBoolConst NumOrCharOrBoolConst);
    public void visit(StaticVarDeclarations StaticVarDeclarations);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(MultipleVarDeclarations MultipleVarDeclarations);
    public void visit(MultipleMethodDeclarationsForClass MultipleMethodDeclarationsForClass);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(TypeIdentOptionalBrackets TypeIdentOptionalBrackets);
    public void visit(MultipleVariablesInOneLineDeclarations MultipleVariablesInOneLineDeclarations);
    public void visit(Expr Expr);
    public void visit(ExtendableClass ExtendableClass);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MultipleTypeIdentOptionalBrackets MultipleTypeIdentOptionalBrackets);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(CondFact CondFact);
    public void visit(FormPars FormPars);
    public void visit(MultipleNamespace MultipleNamespace);
    public void visit(EmptyMethodDeclaration EmptyMethodDeclaration);
    public void visit(MethodDeclarationOneAndMultiple MethodDeclarationOneAndMultiple);
    public void visit(EmptyClassOrVarOrConstDeclaration EmptyClassOrVarOrConstDeclaration);
    public void visit(ListAndClassDecl ListAndClassDecl);
    public void visit(ListAndVarDecl ListAndVarDecl);
    public void visit(ListAndConstDecl ListAndConstDecl);
    public void visit(EmptyNamespace EmptyNamespace);
    public void visit(NamespacesOneAndMultiple NamespacesOneAndMultiple);
    public void visit(EmptyMultipleConstVariablesInOneLineDeclarations EmptyMultipleConstVariablesInOneLineDeclarations);
    public void visit(MultipleConstVariablesInOneLineDeclarationsList MultipleConstVariablesInOneLineDeclarationsList);
    public void visit(NumOrCharOrBoolConstNumConst NumOrCharOrBoolConstNumConst);
    public void visit(NumOrCharOrBoolConstBoolConst NumOrCharOrBoolConstBoolConst);
    public void visit(NumOrCharOrBoolConstCharConst NumOrCharOrBoolConstCharConst);
    public void visit(EmptyMultipleVariablesInOneLineDeclarations EmptyMultipleVariablesInOneLineDeclarations);
    public void visit(MultipleVariablesInOneLineDeclarationsNoBrackets MultipleVariablesInOneLineDeclarationsNoBrackets);
    public void visit(MultipleVariablesInOneLineDeclarationsBrackets MultipleVariablesInOneLineDeclarationsBrackets);
    public void visit(ClassNotExtened ClassNotExtened);
    public void visit(ClassExtended ClassExtended);
    public void visit(EmptyStaticVarDeclarations EmptyStaticVarDeclarations);
    public void visit(StaticVarDeclarationsList StaticVarDeclarationsList);
    public void visit(EmptyStaticInitalizerList EmptyStaticInitalizerList);
    public void visit(StaticInitializerList StaticInitializerList);
    public void visit(EmptyMultipleVarDeclarations EmptyMultipleVarDeclarations);
    public void visit(MultipleVarDeclarationsList MultipleVarDeclarationsList);
    public void visit(EmptyMultipleMethodDeclarationsForClass EmptyMultipleMethodDeclarationsForClass);
    public void visit(MultipleMethodDeclarationsForClassList MultipleMethodDeclarationsForClassList);
    public void visit(EmptyMultipleStatements EmptyMultipleStatements);
    public void visit(MultipleStatementsList MultipleStatementsList);
    public void visit(EmptyMultipleTypeIdentOptionalBrackets EmptyMultipleTypeIdentOptionalBrackets);
    public void visit(MultipleTypeIdentOptionalBracketsList MultipleTypeIdentOptionalBracketsList);
    public void visit(TypeIdentOptionalBracketsBrackets TypeIdentOptionalBracketsBrackets);
    public void visit(TypeIdentOptionalBracketsNoBrackets TypeIdentOptionalBracketsNoBrackets);
    public void visit(EmptyDesignatorIdentExprList EmptyDesignatorIdentExprList);
    public void visit(DesignatorIdentExprListExpr DesignatorIdentExprListExpr);
    public void visit(DesignatorIdentExprListIdent DesignatorIdentExprListIdent);
    public void visit(EmptyMultipleDesignators EmptyMultipleDesignators);
    public void visit(MultipleDesignatorsAddingComma MultipleDesignatorsAddingComma);
    public void visit(MultipleDesignatorsAddingDesignatorAndComma MultipleDesignatorsAddingDesignatorAndComma);
    public void visit(EmptyMultipleDesignatorStatements EmptyMultipleDesignatorStatements);
    public void visit(BasicMultipleDesignatorStatements BasicMultipleDesignatorStatements);
    public void visit(MultipleDesignatorStatementsList MultipleDesignatorStatementsList);
    public void visit(MatchedMultipletStatements MatchedMultipletStatements);
    public void visit(MatchedForLoopCondFact MatchedForLoopCondFact);
    public void visit(MatchedForLoop MatchedForLoop);
    public void visit(MatchedPrintParensExprNumConstSemi MatchedPrintParensExprNumConstSemi);
    public void visit(MatchedPrintParensExprSemi MatchedPrintParensExprSemi);
    public void visit(MatchedReadParensDesignatorSemi MatchedReadParensDesignatorSemi);
    public void visit(MatchedReturnExprSemi MatchedReturnExprSemi);
    public void visit(MatchedReturnSemi MatchedReturnSemi);
    public void visit(MatchedContinueSemi MatchedContinueSemi);
    public void visit(MatchedBreakSemi MatchedBreakSemi);
    public void visit(MatchedIfElse MatchedIfElse);
    public void visit(MatchedDesignatorStatementSemi MatchedDesignatorStatementSemi);
    public void visit(IfElseUnmatched IfElseUnmatched);
    public void visit(IfUnmatched IfUnmatched);
    public void visit(Mod Mod);
    public void visit(Divide Divide);
    public void visit(Times Times);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(Lte Lte);
    public void visit(Lt Lt);
    public void visit(Gte Gte);
    public void visit(Gt Gt);
    public void visit(Neq Neq);
    public void visit(Eq Eq);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(ExtendedDesignator ExtendedDesignator);
    public void visit(BasicDesignator BasicDesignator);
    public void visit(FactorParensExpr FactorParensExpr);
    public void visit(FactorNewTypeParensActPars FactorNewTypeParensActPars);
    public void visit(FactorNewTypeParens FactorNewTypeParens);
    public void visit(FactorNewTypeBracketsExpr FactorNewTypeBracketsExpr);
    public void visit(FactorConst FactorConst);
    public void visit(FactorDesifnatorParensActPars FactorDesifnatorParensActPars);
    public void visit(FactorDesignatorParens FactorDesignatorParens);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(BasicTermFactor BasicTermFactor);
    public void visit(TermFactorList TermFactorList);
    public void visit(BasicTerm BasicTerm);
    public void visit(MultipleExprTerm MultipleExprTerm);
    public void visit(BasicTermWithMinus BasicTermWithMinus);
    public void visit(ExpandedCondFact ExpandedCondFact);
    public void visit(BasicCondFact BasicCondFact);
    public void visit(BasicCondTerm BasicCondTerm);
    public void visit(ExpandedCondTerm ExpandedCondTerm);
    public void visit(BasicCondition BasicCondition);
    public void visit(ExpandedCondition ExpandedCondition);
    public void visit(BasicActPat BasicActPat);
    public void visit(MultipleActPats MultipleActPats);
    public void visit(DesignatorStatementWithPointer DesignatorStatementWithPointer);
    public void visit(DesignatorStatementDecrement DesignatorStatementDecrement);
    public void visit(DesignatorStatementIncrement DesignatorStatementIncrement);
    public void visit(DesignatorStatementParensActPars DesignatorStatementParensActPars);
    public void visit(DesignatorStatementParens DesignatorStatementParens);
    public void visit(DesignatorStatementAssignopExpr DesignatorStatementAssignopExpr);
    public void visit(StatementUnmatched StatementUnmatched);
    public void visit(StatementMatched StatementMatched);
    public void visit(BasicType BasicType);
    public void visit(ExpandedType ExpandedType);
    public void visit(FormParameters FormParameters);
    public void visit(VoidMethodDeclarationFormPars VoidMethodDeclarationFormPars);
    public void visit(VoidMethodDeclaration VoidMethodDeclaration);
    public void visit(TypeMethodDeclarationFormPars TypeMethodDeclarationFormPars);
    public void visit(TypeMethodDeclaration TypeMethodDeclaration);
    public void visit(StaticInit StaticInit);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclarationWithoutBrackets VarDeclarationWithoutBrackets);
    public void visit(VarDeclarationWithBrackets VarDeclarationWithBrackets);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(Namespace Namespace);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
